spring:
  application:
    name: sim-backend
  
  profiles:
    active: development
  
  datasource:
    url: jdbc:h2:mem:simdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: password
    driver-class-name: org.h2.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
    open-in-view: false
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  
  cache:
    type: none
    # Temporarily disabled Redis cache to fix startup issues
    # redis:
    #   time-to-live: 600000
    #   cache-null-values: false
  
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  
  security:
    user:
      name: admin
      password: admin123

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890}
  expiration: 86400000 # 24 hours in milliseconds
  refresh-expiration: 604800000 # 7 days in milliseconds

# Application Configuration
app:
  name: School Information Management System
  version: 1.0.0
  description: Spring Boot backend for SIM
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
  
  file:
    upload-dir: ${FILE_UPLOAD_DIR:./uploads}
    max-size: 10MB
  
  encryption:
    key: ${ENCRYPTION_KEY:myEncryptionKey123456789012345678901234567890}

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# Logging Configuration
logging:
  level:
    com.school.sim: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/sim-backend.log

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
  show-actuator: true

---
# Development Profile
spring:
  config:
    activate:
      on-profile: development
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
  
  h2:
    console:
      enabled: true

logging:
  level:
    com.school.sim: DEBUG
    org.springframework.web: DEBUG

---
# Testing Profile
spring:
  config:
    activate:
      on-profile: test
  
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect
  
  data:
    redis:
      host: localhost
      port: 6370

jwt:
  secret: testSecretKey123456789012345678901234567890
  expiration: 3600000 # 1 hour for testing

---
# Production Profile
spring:
  config:
    activate:
      on-profile: production
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
  
  data:
    redis:
      ssl: true

logging:
  level:
    com.school.sim: WARN
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
  file:
    name: /var/log/sim-backend/application.log